AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  eTRON workspace-domain functions template

Parameters:
  PermissionsBucketName:
    Type: String
    
Globals:
  Function:
    Timeout: 5
    Runtime: nodejs22.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        PERMISSIONS_BUCKET: !Ref PermissionsBucketName

Resources:

  eTRONApi:
      Type: AWS::Serverless::Api
      Properties:
        StageName: dev
        Auth:
          DefaultAuthorizer: CognitoAuthorizer
          Authorizers:
            CognitoAuthorizer:
              UserPoolArn: arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86
              Identity:
                Header: Authorization

  # Workspace Lambda 
  WorkspaceCoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-core
      Handler: workspaceHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        CreateWorkspace:
          Type: Api 
          Properties:
            Path: /workspace
            Method: post
            RestApiId: !Ref eTRONApi

        UpdateWorkspace:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}
            Method: put
            RestApiId: !Ref eTRONApi

        GetWorkspace:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}
            Method: get
            RestApiId: !Ref eTRONApi

        GetWorkspaceByUserId:
          Type: Api 
          Properties: 
            Path: /workspace/users/{userId}
            Method: get
            RestApiId: !Ref eTRONApi

        TransferOwnership:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/transfer/{userId}
            Method: put
            RestApiId: !Ref eTRONApi

        DeleteWorkspace:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}
            Method: delete
            RestApiId: !Ref eTRONApi

        GetDefaultPermissions:
          Type: Api
          Properties:
            Path: /workspace/permissions 
            Method: get
            RestApiId: !Ref eTRONApi

  # Invite Lambda 
  WorkspaceInvitesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-invites
      Handler: inviteHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        InviteUser:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/invites
            Method: post
            RestApiId: !Ref eTRONApi

        CancelUsersInvites:
          Type: Api 
          Properties:
            Path: /workspace/invites/{email}
            Method: delete
            RestApiId: !Ref eTRONApi

        CancelInvite:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/invites/{inviteId}
            Method: delete
            RestApiId: !Ref eTRONApi
        
        GetInvite:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/invites/{inviteId}
            Method: get
            RestApiId: !Ref eTRONApi

        GetSentInvites:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/invites
            Method: get
            RestApiId: !Ref eTRONApi

  # User Lambda 
  WorkspaceUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-users
      Handler: userHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        AddUser:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/users/invites/{inviteId}
            Method: post
            RestApiId: !Ref eTRONApi

        UpdateUser:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/users/{userId}
            Method: put
            RestApiId: !Ref eTRONApi

        RemoveUser:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/users/{userId}
            Method: delete
            RestApiId: !Ref eTRONApi

        GetUser:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/users/{userId}
            Method: get
            RestApiId: !Ref eTRONApi

        GetAllUsers:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/users
            Method: get
            RestApiId: !Ref eTRONApi
        

  # Role Lambda 
  WorkspaceRolesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-roles
      Handler: roleHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        CreateRole:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/roles
            Method: post
            RestApiId: !Ref eTRONApi

        UpdateRole:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/roles/{roleId}
            Method: put
            RestApiId: !Ref eTRONApi

        DeleteRole:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/roles/{roleId}
            Method: delete
            RestApiId: !Ref eTRONApi

        GetRole:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/roles/{roleId}
            Method: get
            RestApiId: !Ref eTRONApi

        GetRoles:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/roles
            Method: get
            RestApiId: !Ref eTRONApi


  # Profile Lambda 
  WorkspaceProfilesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-profiles
      Handler: profileHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        CreateProfile:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/profiles
            Method: post
            RestApiId: !Ref eTRONApi

        UpdateProfile:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/profiles/{profileId}
            Method: put
            RestApiId: !Ref eTRONApi

        DeleteProfile:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/profiles/{profileId}
            Method: delete
            RestApiId: !Ref eTRONApi

        GetProfile:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/profiles/{profileId}
            Method: get
            RestApiId: !Ref eTRONApi

        GetProfiles:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/profiles
            Method: get
            RestApiId: !Ref eTRONApi

  # Module Lambda 
  WorkspaceModulesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/workspace-modules
      Handler: moduleHandler.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Workspaces
        - DynamoDBCrudPolicy:
            TableName: WorkspaceUsers
        - DynamoDBCrudPolicy:
            TableName: WorkspaceInvites
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource: "*"
          - Effect: Allow
            Action:
              - cognito-idp:ListUsers
              - cognito-idp:AdminUpdateUserAttributes
            Resource:
              - arn:aws:cognito-idp:ap-southeast-2:841196398222:userpool/ap-southeast-2_Q4EgaQS86

      Events:
        InstallModule:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/modules/{moduleKey}
            Method: post
            RestApiId: !Ref eTRONApi

        ToggleModule:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/modules/{moduleKey}/toggle
            Method: put
            RestApiId: !Ref eTRONApi

        UninstallModule:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/modules/{moduleKey}
            Method: delete
            RestApiId: !Ref eTRONApi

        GetInstalledModules:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/modules/installed
            Method: get
            RestApiId: !Ref eTRONApi

        GetUninstalledModules:
          Type: Api 
          Properties:
            Path: /workspace/{workspaceId}/modules/uninstalled
            Method: get
            RestApiId: !Ref eTRONApi
